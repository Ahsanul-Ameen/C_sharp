#include <stdio.h>
#include <assert.h>

/*
Problem 21:

input: an integer n greater than 1
output: nice pattern

Sample IO:

Input: 
	11

Output:
********************************************
**********..********************..**********
*********....******************....*********
********......****************......********
*******........**************........*******
******..........************..........******
*****............**********............*****
****..............********..............****
***................******................***
**..................****..................**
*....................**....................*
*....................**....................*
**..................****..................**
***................******................***
****..............********..............****
*****............**********............*****
******..........************..........******
*******........**************........*******
********......****************......********
*********....******************....*********
**********..********************..**********
********************************************
*/

inline void printer(int n, char ch) {
	for(int i = 1; i <= n; i++) 
		printf("%c", ch);
}

inline void line(int n, int gap) {
	// column 1
	printer(n, '*'); 
	printer(gap, '.'); 
	printer(n, '*'); 
	// column 2
	printer(n, '*'); 
	printer(gap, '.'); 
	printer(n, '*'); 
	printf("\n"); 
}

void pattern(int n, int gap) {
	if (!n) 
		return;

	line(n, gap);
	pattern(n - 1, gap + 2);
	line(n, gap);
}


int main(void) {

	int n; scanf("%d", &n); 

	assert(n > 1);

	pattern(n, 0);

	return 0;
}


// gcc -o recursion21 recursion_pattern.cc && ./recursion21
